#  ________                ___ ___               .__
#  \______ \   _______  __/   |   \   ___________|  |   ____   ______
#   |    |  \_/ __ \  \/ /    ~    \_/ __ \_  __ \  | _/ __ \ /  ___/
#   |    `   \  ___/\   /\    Y    /\  ___/|  | \/  |_\  ___/ \___ \
#  /_______  /\___  >\_/  \___|_  /  \___  >__|  |____/\___  >____  >
#          \/     \/            \/       \/                \/     \/
# | Author: HerlesINC | Github: DevHerles | Email: herles.incalla@gmail.com |

# -------------------------- Set the prefix to `ctrl + a` instead of `ctrl + b`
unbind C-b
set-option -g prefix C-a
set-option -sg escape-time 10
set-option -g default-terminal "screen-256color"
bind-key C-a send-prefix

# Use | and - to split a window vertically and horizontally instead of " and % respoectively
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# --------------------------- smart pane switching with awareness of vim splits
# --------- https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# ----------------------------------------------------------------- split panes
bind Up    split-window -b -v # ------------------------Create a new pane above
bind Down  split-window -v # ---------------------------Create a new pane below
bind Left  split-window -b -h # ------------------Create a new pane to the left
bind Right split-window -h # --------------------Create a new pane to the right

bind-key -n M-h previous-window
bind-key -n M-l next-window
bind-key -n M-H previous-window
bind-key -n M-L next-window

# -------------------------------------------------------------- resizing panes
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 3
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# ---------------------- Join the last active pane/window to the current window
bind-key j join-pane -h -s !
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"

# ----------------- Send the current pane/window to the last active pane/window
bind-key s join-pane -h -t !
bind-key @ command-prompt -p "send pane to:"  "join-pane -h -t '%%'"

# ---------------------------------------------------------- reload config file
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded."

# --------------------- renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g history-limit 100000 # ----------------------- increase scrollback lines

# ----------------- Colors - derived from Powerline Double Cyan by Jim Myhrberg
set -g status-interval 2
set -g status-left-length 30
set -g status-fg colour240
set -g status-bg colour235
set -g status-left "#[fg=brightcyan]#(whoami)@#(uname -n | cut -d. -f1) "
set -g window-status-format "#[bg=colour237,fg=white]  ⋅#I⋅ #W "
set -g window-status-current-format "#[fg=colour208]#[bg=colour0] #I #[fg=black]#[bg=brightcyan] #W  "
set -g window-status-separator ""
set -g status-justify centre
set -g pane-border-style bg=default,fg=colour245
set -g pane-active-border-style bg=default,fg=brightcyan
set -g clock-mode-colour colour39
set -g clock-mode-style 24
set -g message-style bg=black,fg=colour39
set -g message-command-style bg=colour233,fg=black
set -g mode-style bg=colour39,fg=colour232
set -g display-panes-time 5000
set -g mouse on # ---------------------- Enable mouse mode (tmux 2.1 and above)
set-option -g allow-rename off # ----------- don't rename windows automatically

unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run " \
  X=$(xclip -o -sel clipboard); \
  tmux set-buffer \"$X\"; \
  tmux paste-buffer -p; \
  tmux display-message 'pasted!' \
"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_empty_prompt ' HerlesINC'
set -g status-right "#[fg=yellow]#[fg=black,bg=yellow] #{pane_index} #[bg=colour233] #[fg=black,bg=brightcyan] #{prefix_highlight} | %a %Y-%m-%d %l:%M:%S #[fg=brightcyan,bg=yellow]"

bind Enter copy-mode # ---------------------------------------- enter copy mode

run -b '~/.tmux/plugins/tpm/tpm'

